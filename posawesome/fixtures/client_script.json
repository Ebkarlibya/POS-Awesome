[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2024-12-08 11:10:39.261139",
  "module": "POSAwesome",
  "name": "Customer Script",
  "script": "frappe.ui.form.on('Customer', {\n    validate(frm) {\n        let item_group_counts = {};\n        let duplicate_item_groups = {};\n\n        if (frm.doc.custom_percent_table && frm.doc.custom_percent_table.length > 0) {\n            frm.doc.custom_percent_table.forEach((row, index) => {\n                if (item_group_counts[row.item_group]) {\n                    duplicate_item_groups[row.item_group] = \n                        (duplicate_item_groups[row.item_group] || [item_group_counts[row.item_group]]).concat(index + 1);\n                } else {\n                    item_group_counts[row.item_group] = index + 1;\n                }\n            });\n\n            if (Object.keys(duplicate_item_groups).length > 0) {\n                let message = Object.entries(duplicate_item_groups)\n                    .map(([group, lines]) => `Item Group <b>${group}</b> is duplicated in lines: ${lines.join(\", \")}`)\n                    .join(\"<br>\");\n                frappe.msgprint(message);\n                frappe.validated = false;\n            }\n        }\n    },\n    custom_update_related_customers_percentage(frm) {\n        frappe.confirm(\n            `This will update all related customers belonging to the current customer <b>${frm.doc.name}</b> with the new percent values for employee and company. Do you want to proceed?`,\n            function() {\n                // User approved the action\n                \n                frappe.call({\n                    method: \"posawesome.api_utils.update_related_customer_percentages\",\n                    args: {\n                        parent_customer: frm.doc.name\n                    },\n                    callback: function(response) {\n                        if (response.message) {\n                            let messages = [];\n                            for (const [item_group, count] of Object.entries(response.message)) {\n                                messages.push(`${count} related customers updated successfully for item group ${item_group}.`);\n                            }\n\n                            // Join messages and display\n                            frappe.msgprint(messages.join(\"<br>\"));\n                        } else {\n                            frappe.msgprint(\"No related customers were updated.\");\n                        }\n                    }\n                });\n\n            },\n            function() {\n                // User canceled\n                frappe.msgprint('Update canceled.');\n            }\n        );\n    }\n\n\n});\n\n\nfrappe.ui.form.on('Percent Table', {\n    employee_percentage(frm, cdt, cdn) {\n        var doc = locals[cdt][cdn];\n        if(doc.employee_percentage){\n            frappe.model.set_value(cdt, cdn, \"company_percentage\", 100-doc.employee_percentage);\n        }\n    },\n    company_percentage(frm, cdt, cdn) {\n        var doc = locals[cdt][cdn];\n        if(doc.company_percentage){\n            frappe.model.set_value(cdt, cdn, \"employee_percentage\", 100-doc.company_percentage);\n        }\n    }\n})\n\n\n\n\nfrappe.ui.form.on('Customer Plan', {\n    is_default: function(frm, cdt, cdn) {\n        let child = locals[cdt][cdn];\n\n        if (child.is_default) {\n            // Uncheck all other rows in the child table\n            frm.doc.custom_plan.forEach(row => {\n                if (row.name !== child.name) {\n                    row.is_default = 0;\n                }\n            });\n        }\n\n        // Refresh the table to reflect the changes\n        frm.refresh_field('custom_plan');\n    }\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2024-12-17 15:41:18.793604",
  "module": "POSAwesome",
  "name": "Sales Invoice Script",
  "script": "frappe.ui.form.on('Sales Invoice', {\n    refresh(frm) {\n        // your code here\n    }\n})\n\nfrappe.ui.form.on(\"Sales Invoice Item\",{\n    rate:function(frm, cdt, cdn) {\n        var row = locals[cdt][cdn];\n        frappe.model.get_value('Customer', {'name': frm.doc.customer}, 'custom_item_enterprise_percent',\n          function(d) {\n            frappe.model.set_value(cdt, cdn, \"custom_item_enterprise_rate\", row.rate*(d.custom_item_enterprise_percent/100));\n            frappe.model.set_value(cdt, cdn, \"custom_item_enterprise_amount\", row.qty*row.custom_item_enterprise_rate);\n          })\n    },\n    qty:function(frm, cdt, cdn) {\n        var row = locals[cdt][cdn];\n        frappe.model.get_value('Customer', {'name': frm.doc.customer}, 'custom_item_enterprise_percent',\n          function(d) {\n            frappe.model.set_value(cdt, cdn, \"custom_item_enterprise_rate\", row.rate*(d.custom_item_enterprise_percent/100));\n            frappe.model.set_value(cdt, cdn, \"custom_item_enterprise_amount\", row.qty*row.custom_item_enterprise_rate);\n          })\n    }\n});",
  "view": "Form"
 }
]